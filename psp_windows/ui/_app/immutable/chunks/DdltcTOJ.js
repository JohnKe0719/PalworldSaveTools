var o=Object.defineProperty;var n=i=>{throw TypeError(i)};var g=(i,s,t)=>s in i?o(i,s,{enumerable:!0,configurable:!0,writable:!0,value:t}):i[s]=t;var r=(i,s,t)=>g(i,typeof s!="symbol"?s+"":s,t),l=(i,s,t)=>s.has(i)||n("Cannot "+t);var a=(i,s,t)=>(l(i,s,"read from private field"),t?t.call(i):s.get(i)),d=(i,s,t)=>s.has(i)?n("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(i):s.set(i,t);import{s as h,a as u,g as b,d as c}from"./BNhJgPkb.js";import{d as f,M as w}from"./E3TZ2KYB.js";var e;class m{constructor(){r(this,"loading",!1);d(this,e,h(u({})))}get buildings(){return b(a(this,e))}set buildings(s){c(a(this,e),s,!0)}async ensureLoaded(){if(Object.keys(this.buildings).length===0&&!this.loading)try{this.loading=!0,this.buildings=await f(w.GET_BUILDINGS),this.loading=!1}catch(s){throw this.loading=!1,console.error("Error fetching buildings:",s),s}this.loading&&(await new Promise(s=>setTimeout(s,100)),await this.ensureLoaded())}async reset(){this.buildings={},await this.ensureLoaded()}}e=new WeakMap;const T=new m;export{T as b};
