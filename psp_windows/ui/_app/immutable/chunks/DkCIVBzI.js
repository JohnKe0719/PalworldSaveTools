var d=Object.defineProperty;var o=t=>{throw TypeError(t)};var h=(t,s,e)=>s in t?d(t,s,{enumerable:!0,configurable:!0,writable:!0,value:e}):t[s]=e;var n=(t,s,e)=>h(t,typeof s!="symbol"?s+"":s,e),p=(t,s,e)=>s.has(t)||o("Cannot "+e);var i=(t,s,e)=>(p(t,s,"read from private field"),e?e.call(t):s.get(t)),r=(t,s,e)=>s.has(t)?o("Cannot add the same private member more than once"):s instanceof WeakSet?s.add(t):s.set(t,e);import{s as l,a as c,g,d as u}from"./BNhJgPkb.js";import{d as f,M as m}from"./E3TZ2KYB.js";var a;class w{constructor(){n(this,"loading",!1);r(this,a,l(c([])))}get points(){return g(i(this,a))}set points(s){u(i(this,a),s,!0)}async ensureLoaded(){if(this.points.length===0&&!this.loading)try{this.loading=!0,this.points=await f(m.GET_MAP_OBJECTS),this.loading=!1}catch(s){throw this.loading=!1,console.error("Error fetching active skills:",s),s}this.loading&&(await new Promise(s=>setTimeout(s,100)),await this.ensureLoaded())}async getMapObjects(){return await this.ensureLoaded(),this.points}async reset(){this.points=[],await this.ensureLoaded()}}a=new WeakMap;const O=new w;export{O as m};
